# Setup script for sysconf "sysconf.base"        -*- shell-script -*-

# Previously sourced: ../sysconf.base/tree/usr/share/nef-common/shell-command

# /sysconf is often created with 0700 so we need to fix it
chmod a+rX /sysconf

######################################################################
#
# Create /etc/sysconf/local-system

if ! [[ -r /etc/sysconf/local-system ]]; then
    cat <<EOF >/etc/sysconf/local-system
# Information about local system, to be sourced by scripts  -*- shell-script -*-
# GENERATED BY 'sysconf update' on $(date)

SYSTEM_CONTAINER=$container
EOF


fi

######################################################################
#
# Set up /etc/bash.bashrc to source all /etc/bash.bashrc.d/*.sh

bashrcfile=/etc/bash.bashrc
bashrcdir=/etc/bash.bashrc.d

grep -q $bashrcdir $bashrcfile || cat >>$bashrcfile <<EOF

# Include *.sh files from $bashrcdir
# (added by $0 on $(date))
if [ -d $bashrcdir ]; then
  for i in $bashrcdir/*.sh; do
    if [ -r \$i ]; then
      . \$i
    fi
  done
  unset i
fi
EOF

######################################################################
#
# Set up /etc/network/interfaces to source all /etc/network/interfaces.d/*.interfaces
#
# TODO: update sysconf-etc.d to manage that
#
if [ -d /etc/network/interfaces.d ]; then
    cat /etc/network/interfaces | grep -q "source /etc/network/interfaces.d" || {
        echo "Fixing /etc/network/interfaces for sourcing interfaces.d/"
        echo >>/etc/network/interfaces
        echo 'source /etc/network/interfaces.d/*.interfaces' >>/etc/network/interfaces
    }
fi

# Fix /etc/host with our hostname (previsouly done in sysconf.gitted/setup.rc)
# (and avoid Apache's "apr_sockaddr_info_get() failed" error)
hostname=$(hostname)
ip=$(ip -o -4 addr show dev eth0 primary  | sed -r 's/.* inet ([0-9.]+).*/\1/')
grep -qE "\s${hostname}($|\s)" /etc/hosts \
    || echo -e "# Added by sysconf.base:\n$ip $hostname" >>/etc/hosts
[ -r /etc/hosts.d/local-domains.hosts ] \
    || echo -e "# Added by sysconf.base:\n$ip $hostname" >>/etc/hosts.d/local-domains.hosts

if [ "$SYSCONF_FORCE_ETC_HOSTS_UPDATE" = yes ]; then
    if ! grep -q "GENERATED BY sysconf-etc.d" /etc/hosts; then
        echo "Forcing the automatic generation of /etc/hosts, as SYSCONF_FORCE_ETC_HOSTS_UPDATE = yes"
        echo '# TO BE GENERATED BY sysconf-etc.d' >>/etc/hosts
    fi
fi

sysconf-etc.d update
